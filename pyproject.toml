[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "multi-ai-mcp"
version = "1.0.0"
description = "Multi-provider AI consultation system for Claude Code with Gemini and Llama2"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Multi-AI Integration Team", email = "contact@example.com"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence"
]
requires-python = ">=3.8"
dependencies = [
    "httpx>=0.24.0",
    "aiofiles>=23.0.0",
    "google-generativeai>=0.3.0",
    "mcp>=1.0.0",
    "structlog>=23.0.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0"
]

[project.urls]
Homepage = "https://github.com/jordanaftermidnight/multi-ai-mcp-integration"
Repository = "https://github.com/jordanaftermidnight/multi-ai-mcp-integration.git"
Documentation = "https://github.com/jordanaftermidnight/multi-ai-mcp-integration/docs"
"Bug Tracker" = "https://github.com/jordanaftermidnight/multi-ai-mcp-integration/issues"

[project.scripts]
multi-ai-setup = "scripts.setup_system:main"
multi-ai-test = "scripts.test_system:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"